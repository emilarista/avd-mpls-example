---
# Validation lab
# local users
fabric_name: MPLS_FABRIC

underlay_routing_protocol: isis
isis_advertise_passive_only: true
# Disabling ISIS hello padding makes it easier with vEOS-lab.
isis_hello_padding: false
isis_ti_lfa:
  enabled: true
  protection: link
  local_convergence_delay: 15000

label_distribution:
  # protocol: ldp
  protocol: isis-sr # Should be the default.

overlay_routing_protocol: ibgp
bgp_as: 65000

# bgp peer groups passwords
bgp_peer_groups:
  MPLS_OVERLAY_PEERS:
    password: $1c$U4tL2vQP9QwZlxIV1K3/pw==

internal_vlan_order:
  allocation: ascending
  range:
    beginning: 3700
    ending: 3900

# Update p2p mtu
p2p_uplinks_mtu: 1600

local_users:
  emil:
    privilege: 15
    role: network-admin
    sha512_password: "$6$kiCAKn8fb8T12ClP$UchWUxo0y/CpYptWYxj7pC8uzjoUJnvi4lSg1c009mqJG2inlUDQdTi/YVY4M0dzgf4LOkaVtL7U11ZRkP7Rm/"

  cvpadmin:
    privilege: 15
    role: network-admin
    sha512_password: "$6$WRH0YV9I461XA.qn$BYsYGThSIHOh4ic8qdjnHWq9Zi/l0W8Ws4DZ5Y5yI3hBBWGP03W3ggXWdY7MTqVA8plRvaazG/U8CeMPkT5aE."

# Cloud Vision server information
cvp_instance_ip: 10.20.20.20
# This ingest key is set at CVP install time.
cvp_ingestauth_key: dudeface

# OOB Management network default gateway.
mgmt_gateway: 10.30.30.1

# dns servers.
name_servers:
  - 10.20.20.13
  - 8.8.8.8

# NTP Servers IP or DNS
# First NTP server will be preferred
# Sourced from Managment VRF
ntp_servers:
  - 0.se.pool.ntp.org
  - 1.se.pool.ntp.org

# Sets the administrative subfield of IP/MAC VRF Route-Distinguishers and Route-Targets
# These are actually the defaults. No need to set anything really.
overlay_rd_type:
  admin_subfield: overlay_loopback
overlay_rt_type:
  admin_subfield: 65000

# BGP max-paths and ecmp
bgp_maximum_paths: 4
bgp_ecmp: 4
# evpn_ebgp_multihop: 10

# EVPN prevent readvertising routes
overlay_prevent_readvertise_to_server: true

# Adjust default bfd values if desired.
bfd_multihop:
  interval: 5000
  min_rx: 5000
  multiplier: 3

# L3 Edge contruct for DCI
# l3_edge:
#   p2p_links_ip_pools:
#     borderleaf_dci_pool: 100.64.48.0/24
#   p2p_links:
#     # dc1-borderleaf1 to backbone1
#     - nodes: [ dc1-borderleaf1a, dc2-borderleaf1 ]
#       id: 1
#       interfaces: [ Ethernet5, Ethernet6 ]
#       as: [ "65000.111", "65000.210" ]
#       ip_pool: borderleaf_dci_pool
#       bfd: false
#       include_in_underlay_protocol: true
#     # dc2-borderleaf2 to backbone2
#     - nodes: [ dc1-borderleaf1b, dc2-borderleaf1 ]
#       id: 2
#       interfaces: [ Ethernet5, Ethernet5 ]
#       as: [ "65000.111", "65000.210" ]
#       ip_pool: borderleaf_dci_pool
#       bfd: false
#       include_in_underlay_protocol: true

custom_structured_configuration_sflow:
  sample: 40000
  vrfs:
    MGMT:
      destinations:
        "127.0.0.1":
      source_interface: Management1
  run: true

# Stuff for validate_state
# ansible_user: cvpadmin
# ansible_password: volvov90t6
# ansible_network_os: eos
# ansible_become: yes
# ansible_become_method: enable
# validation_mode_loose: true
# ansible_httpapi_use_ssl: true
# ansible_httpapi_validate_certs: false

# L3LS Fabric Values - update these values with caution,
# SOME CHANGES COULD BE DISRUPTIVE.

# dc_name: DC1_FABRIC

# Disable vlan aware bundles
vxlan_vlan_aware_bundles: false

# P Routers
p:
  platform: vEOS-LAB
  defaults:
    loopback_ipv4_pool: 100.70.0.0/24
    # isis_system_id_prefix: '0000.0000'
    raw_eos_cli: |
      management security
         password encryption-key common
  nodes:
    p4:
      id: 4
      mgmt_ip: 10.30.30.104/24
      backbone_interfaces:
        - interface: Ethernet1
          uplink_switch: pe3
          uplink_switch_interface: Ethernet1
        - interface: Ethernet2
          uplink_switch: pe5
          uplink_switch_interface: Ethernet2
        - interface: Ethernet3
          uplink_switch: rr7
          uplink_switch_interface: Ethernet4
    p6:
      id: 6
      mgmt_ip: 10.30.30.106/24
      backbone_interfaces:
        - interface: Ethernet1
          uplink_switch: pe5
          uplink_switch_interface: Ethernet1
        - interface: Ethernet2
          uplink_switch: pe1
          uplink_switch_interface: Ethernet2

# Leaf switch groups
# A maximum of two nodes can form a leaf group
# When two nodes are in a leaf group this will automatically form mlag pair

pe:
  defaults:
    virtual_router_mac_address: 00:1c:73:00:dc:00
    platform: vEOS-LAB
    loopback_ipv4_pool: 100.70.0.0/24
    # isis_system_id_prefix: '0000.0001'
    # loopback_ipv4_offset: 3
    # vtep_loopback_ipv4_pool: 100.64.12.0/24
    # max_uplink_switches: 3
    # uplink_switches: [ dc1-spine1, dc1-spine2 ]
    # uplink_ipv4_pool: 100.64.10.0/24
    # backbone_interface_speed: forced 100gfull
    # mlag_interfaces: [ Ethernet3, Ethernet4 ]
    spanning_tree_priority: 4096
    spanning_tree_mode: mstp
    # spanning_tree_root_super: true
    bgp_defaults:
      - 'no bgp default ipv4-unicast'
      - 'distance bgp 20 200 200'
      - 'graceful-restart restart-time 300'
      - 'graceful-restart'
    mpls_route_reflectors: [ rr7 ]
    raw_eos_cli: |
      management security
         password encryption-key common
  node_groups:
    pe1-2:
      filter:
        tenants: [ TENANT_A ]
        tags: [ site1-2 ]
      nodes:
        pe1:
          id: 1
          mgmt_ip: 10.30.30.101/24
          backbone_interfaces:
            - interface: Ethernet1
              uplink_switch: pe2
              uplink_switch_interface: Ethernet1
            - interface: Ethernet2
              uplink_switch: p6
              uplink_switch_interface: Ethernet2
            - interface: Ethernet3
              uplink_switch: rr7
              uplink_switch_interface: Ethernet2
        pe2:
          id: 2
          mgmt_ip: 10.30.30.102/24
          backbone_interfaces:
            - interface: Ethernet1
              uplink_switch: pe1
              uplink_switch_interface: Ethernet1
            - interface: Ethernet2
              uplink_switch: pe3
              uplink_switch_interface: Ethernet2
              # id: 5
              # For auto p2p link addressing we could use the link id and get a /31 subnet from a supernet.
              # Then for IP calculation we could use the lowest node id to allocate the first address in the subnet.
    pe3:
      filter:
        tenants: [ TENANT_B ]
        tags: [ site3 ]
      nodes:
        pe3:
          id: 3
          mgmt_ip: 10.30.30.103/24
          backbone_interfaces:
            - interface: Ethernet1
              uplink_switch: p4
              uplink_switch_interface: Ethernet1
            - interface: Ethernet2
              uplink_switch: pe2
              uplink_switch_interface: Ethernet2
            - interface: Ethernet3
              uplink_switch: rr7
              uplink_switch_interface: Ethernet1
    pe5:
      filter:
        tenants: [ TENANT_A, TENANT_B ]
        tags: [ site5 ]
      nodes:
        pe5:
          id: 5
          mgmt_ip: 10.30.30.105/24
          backbone_interfaces:
            - interface: Ethernet1
              uplink_switch: p6
              uplink_switch_interface: Ethernet1
            - interface: Ethernet2
              uplink_switch: p4
              uplink_switch_interface: Ethernet2
            - interface: Ethernet3
              uplink_switch: rr7
              uplink_switch_interface: Ethernet3

rr:
  defaults:
    platform: vEOS-LAB
    loopback_ipv4_pool: 100.70.0.0/24
    # isis_system_id_prefix: '0000.0002'
    bgp_defaults:
      - 'no bgp default ipv4-unicast'
      - 'distance bgp 20 200 200'
      - 'graceful-restart restart-time 300'
      - 'graceful-restart'
      - 'bgp route-reflector preserve-attributes always'
    raw_eos_cli: |
      management security
         password encryption-key common
  node_groups:
    rr7:
      bgp_cluster_id: 7.7.7.7
      nodes:
        rr7:
          id: 7
          mgmt_ip: 10.30.30.107/24
          backbone_interfaces:
            - interface: Ethernet1
              uplink_switch: pe3
              uplink_switch_interface: Ethernet3
            - interface: Ethernet2
              uplink_switch: pe1
              uplink_switch_interface: Ethernet3
            - interface: Ethernet3
              uplink_switch: pe5
              uplink_switch_interface: Ethernet3
            - interface: Ethernet4
              uplink_switch: p4
              uplink_switch_interface: Ethernet3

connected_endpoints_keys:
  routers:
    type: router
  cpes:
    type: cpe